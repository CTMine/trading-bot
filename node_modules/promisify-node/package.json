{
  "_args": [
    [
      {
        "raw": "promisify-node@^0.5.0",
        "scope": null,
        "escapedName": "promisify-node",
        "name": "promisify-node",
        "rawSpec": "^0.5.0",
        "spec": ">=0.5.0 <0.6.0",
        "type": "range"
      },
      "/Users/malbec/Documents/data/projects/AI/trading-bot"
    ]
  ],
  "_from": "promisify-node@>=0.5.0 <0.6.0",
  "_id": "promisify-node@0.5.0",
  "_inCache": true,
  "_location": "/promisify-node",
  "_nodeVersion": "10.3.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/promisify-node_0.5.0_1528217206437_0.8025078319797676"
  },
  "_npmUser": {
    "name": "tbranyen",
    "email": "tim@tabdeveloper.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "promisify-node@^0.5.0",
    "scope": null,
    "escapedName": "promisify-node",
    "name": "promisify-node",
    "rawSpec": "^0.5.0",
    "spec": ">=0.5.0 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/promisify-node/-/promisify-node-0.5.0.tgz",
  "_shasum": "b7115a9d5cd241e939c96e260acda24938d25720",
  "_shrinkwrap": null,
  "_spec": "promisify-node@^0.5.0",
  "_where": "/Users/malbec/Documents/data/projects/AI/trading-bot",
  "author": {
    "name": "Tim Branyen",
    "url": "@tbranyen"
  },
  "bugs": {
    "url": "https://github.com/nodegit/promisify-node/issues"
  },
  "dependencies": {
    "nodegit-promise": "^4.0.0",
    "object-assign": "^4.1.1"
  },
  "description": "Wrap Node-callback functions to return Promises.",
  "devDependencies": {
    "istanbul": "^0.4.5",
    "mocha": "^5.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-GR2E4qgCoKFTprhULqP2OP3bl8kHo16XtnqtkHH6be7tPW1yL6rXd15nl3oV2sLTFv1+j6tqoF69VVpFtJ/j+A==",
    "shasum": "b7115a9d5cd241e939c96e260acda24938d25720",
    "tarball": "https://registry.npmjs.org/promisify-node/-/promisify-node-0.5.0.tgz",
    "fileCount": 11,
    "unpackedSize": 18103,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbFr53CRA9TVsSAnZWagAAmu0P/jfGwq1WrEEMxdka5/xr\nfB3HBWn5IFlm7gd9tuPMbN0bSvui6Kg9GDbz8rkDxjB2rKbC/dtwEMGZ0kyP\n7Fnup/CHGVD8BMa6iNpfL7dr3TJ8jAB+KlilACoDWG0r2S0WyeZXJg1TJtDH\nnZESy0jOmaa7Cp/ASHQPWbLe7tI0GNeQdu31aOcniv5pkNw76YhJ5z/00n0Y\ncptM9RQKtfw0QN3HdMobatmbdrGSEnw9QXtZDnVZsV7D+7b6n4PocoKb8/8a\n0flywo8nM6hVRg7cEZIbSHWzX0rY4i+AALqXxRu8dWmDkFi5bkIhLUm58TkH\n/IRvPbi+mxWNzjnDz6B9R6NdGP36AWxmMGByNdt7Q70IzLCmgXLOVW7J9+P/\nNmZAKJvleww5pbcjD+ikqLSsQ/tbp0NARLhxpndi1ktoG/9FjlxwbjeY3mXh\nmsZhyWoC8XXHPy7Olo4x4Y8eDPYJYXRDy3LZ9rNWwYdiH+ZBKIeXGkMd91C3\na80DXVrg2yu0A2uQIHsNcvmyVpKcJnfGnw9ADDvoDBQLobbmFy1sOSwh/RFK\n+8i5L8y3v42Xs0aN18lOm40qyRVGtmf/x7VdrlySFK7vf26tNaRgfPiSM1Fh\ngsGTtqCUZ1om0XY8BcfT9SwaBUDxLw88k0sorWefB+0ivvhC+hZ8F63Sas2m\n7zal\r\n=zhdB\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "02fc47cfc00146a533193bc4740e2e3e3be81c6f",
  "homepage": "https://github.com/nodegit/promisify-node#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "johnhaley81",
      "email": "johnhaley81@gmail.com"
    },
    {
      "name": "tbranyen",
      "email": "tim@tabdeveloper.com"
    }
  ],
  "name": "promisify-node",
  "optionalDependencies": {},
  "readme": "Promisify Node\n--------------\n\n**Stable: 0.5.0** \n\n[![Build\nStatus](https://travis-ci.org/nodegit/promisify-node.png?branch=master)](https://travis-ci.org/nodegit/promisify-node)\n\nMaintained by Tim Branyen [@tbranyen](http://twitter.com/tbranyen).\n\nWraps Node modules, functions, and methods written in the Node-callback style\nto return Promises.\n\n### Install ###\n\n``` bash\nnpm install promisify-node\n```\n\n### Examples ###\n\nWrap entire Node modules recursively:\n\n``` javascript\nvar promisify = require(\"promisify-node\");\nvar fs = promisify(\"fs\");\n\n// This function has been identified as an asynchronous function so it has\n// been automatically wrapped.\nfs.readFile(\"/etc/passwd\").then(function(contents) {\n  console.log(contents);\n});\n```\n\nWrap a single function:\n\n``` javascript\nvar promisify = require(\"promisify-node\");\n\nfunction async(callback) {\n  callback(null, true);\n}\n\n// Convert the function to return a Promise.\nvar wrap = promisify(async);\n\n// Invoke the newly wrapped function.\nwrap().then(function(value) {\n  console.log(value === true);\n});\n```\n\nWrap a method on an Object:\n\n``` javascript\nvar promisify = require(\"promisify-node\");\n\nvar myObj = {\n  myMethod: function(a, b, cb) {\n    cb(a, b);\n  }\n};\n\n// No need to return anything as the methods will be replaced on the object.\npromisify(myObj);\n\n// Intentionally cause a failure by passing an object and inspect the message.\nmyObj.myMethod({ msg: \"Failure!\" }, null).then(null, function(err) {\n  console.log(err.msg);\n});\n```\n\nWrap without mutating the original:\n```javascript\nvar promisify = require(\"promisify-node\");\n\nvar myObj = {\n  myMethod: function(a, b, cb) {\n    cb(a, b);\n  }\n};\n\n// Store the original method to check later\nvar originalMethod = myObj.myMethod;\n\n// Now store the result, since the 'true' value means it won't mutate 'myObj'.\nvar promisifiedObj = promisify(myObj, undefined, true);\n\n// Intentionally cause a failure by passing an object and inspect the message.\npromisifiedObj.myMethod({ msg: \"Failure!\" }, null).then(null, function(err) {\n  console.log(err.msg);\n});\n\n// The original method is still intact\nassert(myObj.myMethod === originalMethod);\nassert(promisifiedObj.myMethod !== myObj.myMethod);\n```\n\n### Tests ###\n\nRun the tests after installing dependencies with:\n\n``` bash\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nodegit/promisify-node.git"
  },
  "scripts": {
    "test": "istanbul cover _mocha -- test"
  },
  "version": "0.5.0"
}
