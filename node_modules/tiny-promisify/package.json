{
  "_args": [
    [
      {
        "raw": "tiny-promisify@^0.1.1",
        "scope": null,
        "escapedName": "tiny-promisify",
        "name": "tiny-promisify",
        "rawSpec": "^0.1.1",
        "spec": ">=0.1.1 <0.2.0",
        "type": "range"
      },
      "/Users/malbec/Documents/data/projects/AI/trading-bot"
    ]
  ],
  "_from": "tiny-promisify@>=0.1.1 <0.2.0",
  "_id": "tiny-promisify@0.1.1",
  "_inCache": true,
  "_location": "/tiny-promisify",
  "_nodeVersion": "5.1.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/tiny-promisify-0.1.1.tgz_1457532083209_0.46021894295699894"
  },
  "_npmUser": {
    "name": "gabmontes",
    "email": "gabriel@utoctadel.com.ar"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tiny-promisify@^0.1.1",
    "scope": null,
    "escapedName": "tiny-promisify",
    "name": "tiny-promisify",
    "rawSpec": "^0.1.1",
    "spec": ">=0.1.1 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/tiny-promisify/-/tiny-promisify-0.1.1.tgz",
  "_shasum": "1681e1595c8a11422af5bf44480215402762ab84",
  "_shrinkwrap": null,
  "_spec": "tiny-promisify@^0.1.1",
  "_where": "/Users/malbec/Documents/data/projects/AI/trading-bot",
  "author": {
    "name": "Gabriel Montes",
    "email": "<gabriel@utoctadel.com.ar"
  },
  "browserify": {
    "transform": [
      "babelify"
    ]
  },
  "bugs": {
    "url": "https://github.com/gabmontes/tiny-promisify/issues"
  },
  "config": {
    "mocha": "--reporter spec --ui bdd"
  },
  "dependencies": {},
  "description": "Tiny library to promisify functions expecting node-style callbacks",
  "devDependencies": {
    "chai": "^3.4.1",
    "istanbul": "^0.4.1",
    "mocha": "^2.3.3",
    "semistandard": "^7.0.4"
  },
  "directories": {},
  "dist": {
    "shasum": "1681e1595c8a11422af5bf44480215402762ab84",
    "tarball": "https://registry.npmjs.org/tiny-promisify/-/tiny-promisify-0.1.1.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "b1867bf7919601a083266a328ad7c666d64ef0e7",
  "homepage": "https://github.com/gabmontes/tiny-promisify#readme",
  "keywords": [
    "promise",
    "promisify",
    "callback",
    "async",
    "es6",
    "node"
  ],
  "license": "WTFPL",
  "main": "index.js",
  "maintainers": [
    {
      "name": "gabmontes",
      "email": "gabriel@utoctadel.com.ar"
    }
  ],
  "name": "tiny-promisify",
  "optionalDependencies": {},
  "readme": "# Tiny Node Promisify\n\nMinimalist library to promisify functions expecting node-style callbacks.\n\n## Install\n\n```bash\nnpm install tiny-promisify\n```\n\n## Usage\n\nGiven a `fn` that uses the node-style callbacks, expecting a callback as the last parameter and this callback expecting an `err` as the first parameter, you can obtain a new function that return promises as follows:\n\n```javascript\nvar promisify = require('tiny-promisify');\n\nfunction fn (args, callback) {\n  // fn code here...\n  callback(err, results);\n}\n\nvar fnAsync = primisify(fn);\nfnAsync(args).then(function (result) {\n  // your code here...\n}).catch(function (err) {\n  // handle error here...\n});\n```\n\n## API\n\n### `promisify(fn, [options])`\n\n* `fn` is a function that receives a callback as the last. argument. The callback will receive an `err` object as the first argument.\n* `options` is an optional object having the following properties:\n  * `multiArgs` set to `true` will make the promise resolve to an array containing all the parameters passed to the callback. Otherwise, only the first non-error parameter is passed to the promise success callback. Defaults to `false`.\n  * `context` is the object uses as `this` when calling `fn`. Defaults to `{}`.\n\nReturns a new function that wraps `fn` in a promise.\n\n## Notes\n\nThe module uses native implementations of `Promise` and `Object.assign()`, `node` version 4.0 or higher is required.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gabmontes/tiny-promisify.git"
  },
  "scripts": {
    "coverage": "istanbul cover _mocha -- $npm_package_config_mocha",
    "style": "semistandard",
    "test": "mocha $npm_package_config_mocha"
  },
  "semistandard": {
    "globals": [
      "before",
      "describe",
      "it",
      "after"
    ]
  },
  "version": "0.1.1"
}
